/*
Copyright 2016 Ville Koskela

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package gometricsclient

// Interface for timer. Instances are started on creation and record state when
// stopped or closed.
//
// If you wish to discard the sample under measurement (e.g. in the event of an
// application exception) simply invoke the Abort() method.
//
// Each timer instance is bound to a Metrics instance. After the Metrics
// instance is closed any timing data generated by Timer instances bound to
// that Metrics instance will be discarded.
type Timer interface {

	// Abort the timer and do not record any timing data in the associated Metrics instance.
	Abort()

	// Stop the timer and record timing data in the associated Metrics instance.
	Stop()

	// Is the timer running.
	Running() bool

	// Is the timer aborted.
	Aborted() bool
}
